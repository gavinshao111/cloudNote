install:
	sudo apt-get install git
	git config --global user.name  "gavinshao111"
	git config --global user.email "yiyecheer@163.com"
	
	ssh-keygen -t rsa -C "yiyecheer@163.com"
	// then upload your public key in guthub.
	ssh -T git@github.com //to test if work.
	
git:
	初始化:
	git clone
	然后直接 git pull ，会很慢，可以加参数 --depth==1
	
	分支
	git branch branch_name	//创建分支
	git checkout branch_name	//切换分支
	git reset --hard develop  //将本地的旧分支 master 重置成 develop
	git push origin master --force //再推送到远程仓库	
	

	查看
	git ls-files 查看仓库文件
	git status -s 查看当前文件修改状态(-s simple)

	撤销add，文件退出暂存区，但是修改保留
	git reset --mixed
	
	删除
    git rm --cached File_name //放弃跟踪某文件 -r 放弃跟踪文件夹
    git rm -r --cached path/ //放弃path下所有文件的跟踪。
    --cached 删除index中的文件，即已添加但未提交。若不加则删除仓库内文件，并会删除本地文件。
    

	git clone git@github.com:gavinshao111/EasyDarwin.git
	
	git remote rm origin
	git remote add origin git@github.com:gavinshao111/ED.git
	
	git ls-files //列出已跟踪文件

	
	git reset --soft ${commit_id}	//回退到commit_id，保留源码和index的内容，直接 git commit 就可以提交
	git reset --hard FETCH_HEAD	//放弃本地的文件修改
	git reset --hard ${commit_id}	//放弃 commit_id 之后的commit
	git checkout ${commit_id} /path/to/file // 回退某文件到某次提交
	git checkout /path/to/file	//放弃指定文件的修改（与本地库保持一致）
	
	git reflog show	//查看所有的操作日志
	 
	git fetch origin master	//与git保持同步
	git merge origin/master
	
	git pull origin master
	
	git add xx.java	//添加要跟踪的文件
	git add . -A	//添加所有
	
	git commit -m "添加项目密钥配置文件"
	git push
	git push origin branch-name --force //本地覆盖远程
		
	git tag -a v0.1.1 9fbc3d0	//给 9fbc3d0 的commit打标签 v0.1.1
	git push origin v0.1.2	//将标签 v0.1.2 上传到git
	
	删除标签：
	git tag -d v0.1.2 // 删除本地
	git push origin master :refs/tags/v0.1.2 // 删除远程
	
	栈
	git stash //将当前工作区的改动备份到栈，同时代码恢复到上一次提交
	git stash list	//显示已备份的栈
	git stash pop	//恢复到最近一次栈的改动
	
	
	参考： http://www.runoob.com/git/git-create-repository.html
	
gitignore:
# 忽略任意路径下的dir文件夹下所有文件
**/dir
# 忽略o或a或d后缀的文件
*.[oad]
